<UserControl x:Class="WPFSample.Scatter.Custom.View"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
             xmlns:vms="clr-namespace:ViewModelsSamples.Scatter.Custom;assembly=ViewModelsSamples"
             xmlns:svg="clr-namespace:LiveChartsCore.Drawing;assembly=LiveChartsCore"
             xmlns:draw="clr-namespace:LiveChartsCore.SkiaSharpView.Drawing.Geometries;assembly=LiveChartsCore.SkiaSharpView"
             xmlns:d="clr-namespace:LiveChartsCore.Defaults;assembly=LiveChartsCore"
             xmlns:local="clr-namespace:WPFSample.Scatter.Custom">
    <UserControl.DataContext>
        <vms:ViewModel/>
    </UserControl.DataContext>
    <lvc:CartesianChart>
        <lvc:CartesianChart.Series>
            <lvc:SeriesCollection>
                <!--
                The HeartScatterSeries is a scatter series that draws a heart shape.
                -->
                <local:HeartScatterSeries
                    Values="{Binding Values1}"
                    Stroke="{x:Null}"
                    GeometrySize="40" />
                <!--
                You can also use SVG paths to draw the geometry
                the VariableSVGPathGeometry can change the drawn path at runtime
                -->
                <local:SvgScatterSeries
                    Values="{Binding Values2}"
                    GeometrySvg="{x:Static svg:SVGPoints.Pin}"
                    GeometrySize="40"/>
                <!--
                Finally you can also use SkiaSharp to draw your own geometry
                -->
                <local:MyGeometryScatterSeries
                    Values="{Binding Values3}"
                    GeometrySize="40"/>
            </lvc:SeriesCollection>
        </lvc:CartesianChart.Series>
    </lvc:CartesianChart>
</UserControl>
